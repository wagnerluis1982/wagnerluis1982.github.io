<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>java on Wagner Macedo</title><link>https://wagnerluis1982.github.io/pt/tags/java/</link><description>Recent content in java on Wagner Macedo</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 09 Oct 2012 11:23:00 -0300</lastBuildDate><atom:link href="https://wagnerluis1982.github.io/pt/tags/java/index.xml" rel="self" type="application/rss+xml"/><item><title>Estrutura try..finally</title><link>https://wagnerluis1982.github.io/pt/posts/2012/10/estrutura-tryfinally/</link><pubDate>Tue, 09 Oct 2012 11:23:00 -0300</pubDate><guid>https://wagnerluis1982.github.io/pt/posts/2012/10/estrutura-tryfinally/</guid><description>O controle de exceções é um recurso fundamental na Programação Orientada a Objetos. Geralmente usamos o famoso try..catch para controlar as exceções no Java ou em outras linguagens que adotam a POO (com notações levemente diferentes).
// try..catch em Java try { ... } catch (Exception e) { ... } Mas, geralmente, quando estamos criando métodos, muitas vezes queremos que as exceções sejam lançadas para fora, assim usamos o try..catch e relançamos a exceção no bloco catch.</description></item></channel></rss>